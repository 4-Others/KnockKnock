jwt:
  secret: ${JWT_SECRET_KEY}
  expirationMs: 3600000
token:
  expiration:
    access: 3600000
    refresh: 86400000
spring:
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: fdfae2918a363efc5fad0a501f3dcd55
            redirect-uri: "http://localhots:8080/login/oauth2/code/kakao"
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope: profile_image, account_email
            client-name: Kakao
        provider:
          kakao:
            authorization_uri: https://kauth.kakao.com/oauth/authorize
            token_uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user_name_attribute: id
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:
    jpa:
      database-platform: org.hibernate.dialect.H2Dialect
      hibernate:
        ddl-auto: create
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: always
    properties:
      org:
        quartz:
          scheduler:
            instanceName: MyScheduler
          jobStore:
            driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
            dataSource: myDataSource
            tablePrefix: QRTZ_
            isClustered: false
            useProperties: false
  mail:
    host: smtp.gmail.com
    port: 587
    username: 4othersofficial@gmail.com
    password: evvkvksaldrjsoen
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true